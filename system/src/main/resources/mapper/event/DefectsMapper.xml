<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liulin.system.mapper.DefectsMapper">
    
    <resultMap type="com.liulin.system.domain.Defects" id="DefectsResult">
        <result property="defectId"    column="defect_id"    />
        <result property="dateRaised"    column="date_raised"    />
        <result property="location"    column="location"    />
        <result property="defectType"    column="defect_type"    />
        <result property="description"    column="description"    />
        <result property="status"    column="status"    />
        <result property="dateComplete"    column="date_complete"    />
        <result property="attachmentIds"    column="attachment_ids"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="buildingId"    column="building_id"    />
    </resultMap>

    <sql id="selectDefectsVo">
        select defect_id, date_raised, location, defect_type, description, status, date_complete, attachment_ids,
               create_by, create_time, update_by, update_time,building_id from defects
    </sql>

    <select id="selectDefectsList" parameterType="Defects" resultMap="DefectsResult">
        <include refid="selectDefectsVo"/>
        <where>  
            <if test="dateRaised != null "> and date_raised = #{dateRaised}</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
            <if test="defectType != null  and defectType != ''"> and defect_type = #{defectType}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="dateComplete != null "> and date_complete = #{dateComplete}</if>
            <if test="attachmentIds != null  and attachmentIds != ''"> and attachment_ids = #{attachmentIds}</if>
        </where>
    </select>
    
    <select id="selectDefectsById" parameterType="Long" resultMap="DefectsResult">
        <include refid="selectDefectsVo"/>
        where defect_id = #{defectId}
    </select>
        
    <insert id="insertDefects" parameterType="Defects" useGeneratedKeys="true" keyProperty="defectId">
        insert into defects
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dateRaised != null">date_raised,</if>
            <if test="location != null">location,</if>
            <if test="defectType != null">defect_type,</if>
            <if test="description != null">description,</if>
            <if test="status != null">status,</if>
            <if test="dateComplete != null">date_complete,</if>
            <if test="attachmentIds != null">attachment_ids,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="buildingId != null">building_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dateRaised != null">#{dateRaised},</if>
            <if test="location != null">#{location},</if>
            <if test="defectType != null">#{defectType},</if>
            <if test="description != null">#{description},</if>
            <if test="status != null">#{status},</if>
            <if test="dateComplete != null">#{dateComplete},</if>
            <if test="attachmentIds != null">#{attachmentIds},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="buildingId != null">#{buildingId},</if>
         </trim>
    </insert>

    <update id="updateDefects" parameterType="Defects">
        update defects
        <trim prefix="SET" suffixOverrides=",">
            <if test="dateRaised != null">date_raised = #{dateRaised},</if>
            <if test="location != null">location = #{location},</if>
            <if test="defectType != null">defect_type = #{defectType},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="dateComplete != null">date_complete = #{dateComplete},</if>
            <if test="attachmentIds != null">attachment_ids = #{attachmentIds},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="buildingId != null">building_id = #{buildingId},</if>
        </trim>
        where defect_id = #{defectId}
    </update>

    <delete id="deleteDefectsById" parameterType="Long">
        delete from defects where defect_id = #{defectId}
    </delete>

    <delete id="deleteDefectsByIds" parameterType="String">
        delete from defects where defect_id in 
        <foreach item="defectId" collection="array" open="(" separator="," close=")">
            #{defectId}
        </foreach>
    </delete>

</mapper>